//Krishnamoorthy

//kris client
/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "kris.h"


void
kris_prog_1(char *host, int a)
{
    CLIENT *clnt;
    int  *result_1;
    numbers  kris_1_arg;
    kris_1_arg.a = a;

#ifndef    DEBUG
    clnt = clnt_create (host, kris_prog, kris_vers, "udp");
    if (clnt == NULL) {
        clnt_pcreateerror (host);
        exit (1);
    }
#endif    /* DEBUG */

    result_1 = kris_1(&kris_1_arg, clnt);
    if (result_1 == (int *) NULL) {
        clnt_perror (clnt, "call failed");
    }
    else{
        // printf("%d",*result_1);
        if (*result_1==1){
            printf("Yes it is a kris number\n");
        }
        else{
            printf("No it is not \n");
        }
    }
#ifndef    DEBUG
    clnt_destroy (clnt);
#endif     /* DEBUG */
}


int
main (int argc, char *argv[])
{
    char *host;

    if (argc < 3) {
        printf ("usage: %s server_host\n", argv[0]);
        exit (1);
    }
    host = argv[1];
    kris_prog_1 (host,atoi(argv[2]));
exit (0);
}

//kris server
/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "kris.h"

int factorial(int a){
    int p =1;
    int i;
    for (i=2;i<=a;i++){
        p = p *i;
    }
    return p;
}

int *
kris_1_svc(numbers *argp, struct svc_req *rqstp)
{
    static int  result;
    int a = argp->a;
    int s = 0;
    int temp = a;
    int d,fact;
    while (temp>0){
        d = temp%10;
        fact = factorial(d);
        s = s+fact;
        temp = temp/10;
    }
    if(s==a){
        result = 1;
    }
    else{
        result = 0;
    }

    return &result;
}

//kris.x
struct numbers{
    int a;
};

program kris_prog{
    version kris_vers{
        int kris(numbers) = 1;
    }=1;
}=1;